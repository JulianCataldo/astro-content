---
import { get, type PageEntryNames } from '/content';
/* ·········································································· */
import Link from '@julian_cataldo/astro-link/Link.astro';
import Layout from '../../layouts/Default.astro';
import TreeNavigation from '../../components/TreeNavigation.astro';
import PrevNextNavigation from '../../components/PrevNextNavigation.astro';
/* —————————————————————————————————————————————————————————————————————————— */

export async function getStaticPaths() {
  const files = await get(Astro.glob('/content/docs/**/*.{md,mdx,yaml}'));
  return (
    files.docs &&
    Object.entries(files.docs).map(([key]) => ({ params: { page: key } }))
  );
}

/* —————————————————————————————————————————————————————————————————————————— */

interface Params {
  page: PageEntryNames;
}
const { page } = Astro.params as unknown as Params;
const currentPage = Astro.url.pathname.split('/')[2] || 'home';

/* ·········································································· */

// NOTE: Retrigger whole content base collection (not filtering "docs")
const content = await get(Astro.glob('/content/**/*.{md,mdx,yaml}'), {
  editMode: import.meta.env.PROD,
});

const Main = content.docs?.[page]?.main?.Content;
---

<Layout>
  <main class="page-docs">
    <div class="navigations">
      <div>
        <h2>Sections</h2>
        <TreeNavigation pages={content.docs} currentPage={currentPage} />
      </div>
      <div class="this-page">
        <h2>On this page</h2>
        <TreeNavigation headings={content.docs?.[page]?.main?.getHeadings()} />
      </div>
    </div>

    <article class="article-body">
      <Main components={{ a: Link }} />

      <PrevNextNavigation pages={content.docs} currentPage={currentPage} />
    </article>
  </main>
</Layout>
